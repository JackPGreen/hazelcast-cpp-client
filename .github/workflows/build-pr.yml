#
# Workflow: Build&Test PR for Hazelcast organization members
# This workflow builds multiple configurations for MacOS, Windows, Ubuntu i386 and Ubuntu x64
# If all the builds and tests are success, the PR can be merged.
# It also runs code-coverage and upload the result as an artifact.

name: Build&Test PR
on: 

  # automatic on every pull request
  pull_request_target:

  # manual (for community PRs that we want to force-run here)  
  workflow_dispatch:
    inputs:

      # the PR number eg 712
      pr_number:
        description: Enter guest PR number to run test & coverage on it.
        required: true

      # the PR HEAD commit SHA which MUST have been verified
      pr_commit:
        description: Enter guest PR verified HEAD commit SHA.
        required: true
env:
  boost_version: 1.78.0
  boost_archive_name: 'boost_1_78_0.tar.gz'
  boost_folder_name: 'boost_1_78_0'
  boost_include_folder: 'C:\Boost\include\boost-1_78'
  boost_url: 'https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.gz'
  thrift_version: 0.13.0
  run_tests: false
  
jobs:

  # test hazelcast membership
  test-membership:
    name: Test Hazelcast Membership
    runs-on: ubuntu-latest
    outputs:
      is-hazelcast: ${{ steps.test-membership.outputs.is-member }}

    steps:
      # checkout the hazelcast/hazelcast-cpp-client repository
      # bare minimum - just to use actions
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          token: ${{ secrets.GH_TOKEN }}
          submodules: false

      - name: Test
        id: test-membership
        uses: ./.github/actions/test-membership
        with:
          organization-name: hazelcast
          member-name: ${{ github.actor }}
          token: ${{ secrets.GH_TOKEN }}
          
  # ensure we are an Hazelcast organization member OR manually running
  ensure-membership:
    name: Ensure Membership
    runs-on: ubuntu-latest
    needs: test-membership
    strategy:
      fail-fast: false    
      
    if: needs.test-membership.outputs.is-hazelcast == 'true' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Report
        shell: bash
        run: echo "User ${{ github.event.pull_request.head.repo.owner.login }} is a member of the Hazelcast organization"          


  # get
  get-refs:
    name: Get Refs
    runs-on: ubuntu-latest
    needs: ensure-membership
    outputs:
      ref: ${{ steps.get-refs.outputs.ref }}
      merged-ref: ${{ steps.get-refs.outputs.merged-ref }}

    steps:
      - name: Get Refs
        id: get-refs
        shell: bash
        run: |
          echo "EVENT: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "PR_NUMBER: ${{ inputs.pr_number }}"
            echo "PR_COMMIT: ${{ inputs.pr_commit }}"
            echo "ref=refs/pull/${{ inputs.pr_number }}/merge" >> $GITHUB_OUTPUT
            echo "merged-ref=${{ inputs.pr_commit }}" >> $GITHUB_OUTPUT
          else
            echo "PR_NUMBER: ${{ github.event.pull_request.number }}"
            echo "ref=refs/pull/${{ github.event.pull_request.number }}/merge" >> $GITHUB_OUTPUT
            echo "merged-ref=''" >> $GITHUB_OUTPUT
          fi
          
  # run for code-coverage and upload the result as an artifact.
  code-coverage:
    runs-on: ubuntu-20.04
    needs: get-refs
    
    name: Code Coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.get-refs.outputs.ref }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Running new code
        run: |
          echo hello world
